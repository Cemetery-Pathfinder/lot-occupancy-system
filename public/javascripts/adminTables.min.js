"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),(()=>{const e=exports.los;function t(e){var t;const s=e.currentTarget,o=s.value;(null===(t=s.closest(".field"))||void 0===t?void 0:t.querySelectorAll(".button.is-static"))[1].innerHTML=`<i class="fas fa-fw fa-${o}" aria-hidden="true"></i>`}Object.defineProperty(exports,"__esModule",{value:!0});let s=exports.workOrderTypes;function o(t){t.preventDefault(),cityssm.postJSON(`${e.urlPrefix}/admin/doUpdateWorkOrderType`,t.currentTarget,e=>{var t;const o=e;o.success?(s=o.workOrderTypes,bulmaJS.alert({message:"Work Order Type Updated Successfully",contextualColorName:"success"})):bulmaJS.alert({title:"Error Updating Work Order Type",message:null!==(t=o.errorMessage)&&void 0!==t?t:"",contextualColorName:"danger"})})}function r(t){const o=t.currentTarget.closest("tr"),r=o.dataset.workOrderTypeId;bulmaJS.confirm({title:"Delete Work Order Type",message:"Are you sure you want to delete this work order type?<br />\n          Note that no work orders will be removed.",messageIsHtml:!0,contextualColorName:"warning",okButton:{text:"Yes, Delete Work Order Type",callbackFunction:function(){cityssm.postJSON(`${e.urlPrefix}/admin/doDeleteWorkOrderType`,{workOrderTypeId:r},e=>{var t;const r=e;r.success?(0===(s=r.workOrderTypes).length?a():o.remove(),bulmaJS.alert({message:"Work Order Type Deleted Successfully",contextualColorName:"success"})):bulmaJS.alert({title:"Error Deleting Work Order Type",message:null!==(t=r.errorMessage)&&void 0!==t?t:"",contextualColorName:"danger"})})}}})}function n(t){const o=t.currentTarget,r=o.closest("tr").dataset.workOrderTypeId;cityssm.postJSON(`${e.urlPrefix}/admin/${"up"===o.dataset.direction?"doMoveWorkOrderTypeUp":"doMoveWorkOrderTypeDown"}`,{workOrderTypeId:r,moveToEnd:t.shiftKey?"1":"0"},e=>{var t;const o=e;o.success?(s=o.workOrderTypes,a()):bulmaJS.alert({title:"Error Moving Work Order Type",message:null!==(t=o.errorMessage)&&void 0!==t?t:"",contextualColorName:"danger"})})}function a(){var t,a,l;const c=document.querySelector("#container--workOrderTypes");if(0!==s.length){c.innerHTML="";for(const d of s){const s=document.createElement("tr");s.dataset.workOrderTypeId=d.workOrderTypeId.toString(),s.innerHTML=`<td>\n            <form>\n              <input name="workOrderTypeId" type="hidden" value="${d.workOrderTypeId.toString()}" />\n              <div class="field has-addons">\n                <div class="control">\n                  <input class="input" name="workOrderType" type="text"\n                    value="${cityssm.escapeHTML(null!==(t=d.workOrderType)&&void 0!==t?t:"")}" maxlength="100" aria-label="Work Order Type" required />\n                </div>\n                <div class="control">\n                  <button class="button is-success" type="submit" aria-label="Save">\n                    <i class="fas fa-save" aria-hidden="true"></i>\n                  </button>\n                </div>\n              </div>\n            </form>\n          </td><td class="is-nowrap">\n            <div class="field is-grouped">\n              <div class="control">\n                ${e.getMoveUpDownButtonFieldHTML("button--moveWorkOrderTypeUp","button--moveWorkOrderTypeDown",!1)}\n              </div>\n              <div class="control">\n                <button class="button is-danger is-light button--deleteWorkOrderType" data-tooltip="Delete Work Order Type" type="button" aria-label="Delete Work Order Type">\n                  <i class="fas fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n          </td>`,null===(a=s.querySelector("form"))||void 0===a||a.addEventListener("submit",o),s.querySelector(".button--moveWorkOrderTypeUp").addEventListener("click",n),s.querySelector(".button--moveWorkOrderTypeDown").addEventListener("click",n),null===(l=s.querySelector(".button--deleteWorkOrderType"))||void 0===l||l.addEventListener("click",r),c.append(s)}}else c.innerHTML='<tr><td colspan="2">\n          <div class="message is-warning"><p class="message-body">There are no active work order types.</p></div>\n          </td></tr>'}delete exports.workOrderTypes,document.querySelector("#form--addWorkOrderType").addEventListener("submit",t=>{t.preventDefault();const o=t.currentTarget;cityssm.postJSON(`${e.urlPrefix}/admin/doAddWorkOrderType`,o,e=>{var t,r;const n=e;n.success?(s=n.workOrderTypes,a(),o.reset(),null===(t=o.querySelector("input"))||void 0===t||t.focus()):bulmaJS.alert({title:"Error Adding Work Order Type",message:null!==(r=n.errorMessage)&&void 0!==r?r:"",contextualColorName:"danger"})})}),a(),Object.defineProperty(exports,"__esModule",{value:!0});let l=exports.workOrderMilestoneTypes;function c(t){t.preventDefault(),cityssm.postJSON(`${e.urlPrefix}/admin/doUpdateWorkOrderMilestoneType`,t.currentTarget,e=>{var t;const s=e;s.success?(l=s.workOrderMilestoneTypes,bulmaJS.alert({message:"Work Order Milestone Type Updated Successfully",contextualColorName:"success"})):bulmaJS.alert({title:"Error Updating Work Order Milestone Type",message:null!==(t=s.errorMessage)&&void 0!==t?t:"",contextualColorName:"danger"})})}function d(t){const s=t.currentTarget.closest("tr"),o=s.dataset.workOrderMilestoneTypeId;bulmaJS.confirm({title:"Delete Work Order Milestone Type",message:"Are you sure you want to delete this work order milestone type?<br />\n          Note that no work orders will be removed.",messageIsHtml:!0,contextualColorName:"warning",okButton:{text:"Yes, Delete Work Order Milestone Type",callbackFunction:function(){cityssm.postJSON(`${e.urlPrefix}/admin/doDeleteWorkOrderMilestoneType`,{workOrderMilestoneTypeId:o},e=>{var t;const o=e;o.success?(0===(l=o.workOrderMilestoneTypes).length?u():s.remove(),bulmaJS.alert({message:"Work Order Milestone Type Deleted Successfully",contextualColorName:"success"})):bulmaJS.alert({title:"Error Deleting Work Order Milestone Type",message:null!==(t=o.errorMessage)&&void 0!==t?t:"",contextualColorName:"danger"})})}}})}function i(t){const s=t.currentTarget,o=s.closest("tr").dataset.workOrderMilestoneTypeId;cityssm.postJSON(`${e.urlPrefix}/admin/${"up"===s.dataset.direction?"doMoveWorkOrderMilestoneTypeUp":"doMoveWorkOrderMilestoneTypeDown"}`,{workOrderMilestoneTypeId:o,moveToEnd:t.shiftKey?"1":"0"},e=>{var t;const s=e;s.success?(l=s.workOrderMilestoneTypes,u()):bulmaJS.alert({title:"Error Moving Work Order Milestone Type",message:null!==(t=s.errorMessage)&&void 0!==t?t:"",contextualColorName:"danger"})})}function u(){var t,s;const o=document.querySelector("#container--workOrderMilestoneTypes");if(0!==l.length){o.innerHTML="";for(const r of l){const n=document.createElement("tr");n.dataset.workOrderMilestoneTypeId=r.workOrderMilestoneTypeId.toString(),n.innerHTML=`<td>\n            <form>\n              <input name="workOrderMilestoneTypeId" type="hidden" value="${r.workOrderMilestoneTypeId.toString()}" />\n              <div class="field has-addons">\n                <div class="control">\n                  <input class="input" name="workOrderMilestoneType" type="text"\n                    value="${cityssm.escapeHTML(r.workOrderMilestoneType)}" maxlength="100" aria-label="Work Order Milestone Type" required />\n                </div>\n                <div class="control">\n                  <button class="button is-success" type="submit" aria-label="Save">\n                    <i class="fas fa-save" aria-hidden="true"></i>\n                  </button>\n                </div>\n              </div>\n            </form>\n          </td><td class="is-nowrap">\n            <div class="field is-grouped">\n              <div class="control">\n                ${e.getMoveUpDownButtonFieldHTML("button--moveWorkOrderMilestoneTypeUp","button--moveWorkOrderMilestoneTypeDown",!1)}\n              </div>\n              <div class="control">\n                <button class="button is-danger is-light button--deleteWorkOrderMilestoneType" data-tooltip="Delete Mielstone Type" type="button" aria-label="Delete Milestone Type">\n                  <i class="fas fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n          </td>`,null===(t=n.querySelector("form"))||void 0===t||t.addEventListener("submit",c),n.querySelector(".button--moveWorkOrderMilestoneTypeUp").addEventListener("click",i),n.querySelector(".button--moveWorkOrderMilestoneTypeDown").addEventListener("click",i),null===(s=n.querySelector(".button--deleteWorkOrderMilestoneType"))||void 0===s||s.addEventListener("click",d),o.append(n)}}else o.innerHTML='<tr><td colspan="2">\n          <div class="message is-warning"><p class="message-body">There are no active work order milestone types.</p></div>\n          </td></tr>'}delete exports.workOrderMilestoneTypes,document.querySelector("#form--addWorkOrderMilestoneType").addEventListener("submit",t=>{t.preventDefault();const s=t.currentTarget;cityssm.postJSON(`${e.urlPrefix}/admin/doAddWorkOrderMilestoneType`,s,e=>{var t,o;const r=e;r.success?(l=r.workOrderMilestoneTypes,u(),s.reset(),null===(t=s.querySelector("input"))||void 0===t||t.focus()):bulmaJS.alert({title:"Error Adding Work Order Milestone Type",message:null!==(o=r.errorMessage)&&void 0!==o?o:"",contextualColorName:"danger"})})}),u(),Object.defineProperty(exports,"__esModule",{value:!0});let p=exports.lotStatuses;function m(t){t.preventDefault(),cityssm.postJSON(`${e.urlPrefix}/admin/doUpdateLotStatus`,t.currentTarget,t=>{var s;const o=t;o.success?(p=o.lotStatuses,bulmaJS.alert({message:`${e.escapedAliases.Lot} Status Updated Successfully`,contextualColorName:"success"})):bulmaJS.alert({title:`Error Updating ${e.escapedAliases.Lot} Status`,message:null!==(s=o.errorMessage)&&void 0!==s?s:"",contextualColorName:"danger"})})}function y(t){const s=t.currentTarget.closest("tr"),o=s.dataset.lotStatusId;bulmaJS.confirm({title:`Delete ${e.escapedAliases.Lot} Status`,message:`Are you sure you want to delete this status?<br />\n                Note that no ${e.escapedAliases.lot} will be removed.`,messageIsHtml:!0,contextualColorName:"warning",okButton:{text:"Yes, Delete Status",callbackFunction:function(){cityssm.postJSON(`${e.urlPrefix}/admin/doDeleteLotStatus`,{lotStatusId:o},t=>{var o;const r=t;r.success?(0===(p=r.lotStatuses).length?T():s.remove(),bulmaJS.alert({message:`${e.escapedAliases.Lot} Status Deleted Successfully`,contextualColorName:"success"})):bulmaJS.alert({title:`Error Deleting ${e.escapedAliases.Lot} Status`,message:null!==(o=r.errorMessage)&&void 0!==o?o:"",contextualColorName:"danger"})})}}})}function v(t){const s=t.currentTarget,o=s.closest("tr").dataset.lotStatusId;cityssm.postJSON(`${e.urlPrefix}/admin/${"up"===s.dataset.direction?"doMoveLotStatusUp":"doMoveLotStatusDown"}`,{lotStatusId:o,moveToEnd:t.shiftKey?"1":"0"},t=>{var s;const o=t;o.success?(p=o.lotStatuses,T()):bulmaJS.alert({title:`Error Moving ${e.escapedAliases.Lot} Status`,message:null!==(s=o.errorMessage)&&void 0!==s?s:"",contextualColorName:"danger"})})}function T(){var t,s;const o=document.querySelector("#container--lotStatuses");if(0!==p.length){o.innerHTML="";for(const r of p){const n=document.createElement("tr");n.dataset.lotStatusId=r.lotStatusId.toString(),n.innerHTML=`<td>\n            <form>\n              <input name="lotStatusId" type="hidden" value="${r.lotStatusId.toString()}" />\n              <div class="field has-addons">\n                <div class="control">\n                  <input class="input" name="lotStatus" type="text"\n                    value="${cityssm.escapeHTML(r.lotStatus)}"\n                    aria-label="${e.escapedAliases.Lot} Status" maxlength="100" required />\n                </div>\n                <div class="control">\n                  <button class="button is-success" type="submit" aria-label="Save">\n                    <i class="fas fa-save" aria-hidden="true"></i>                  </button>\n                </div>\n              </div>\n            </form>\n          </td><td class="is-nowrap">\n            <div class="field is-grouped">\n              <div class="control">\n                ${e.getMoveUpDownButtonFieldHTML("button--moveLotStatusUp","button--moveLotStatusDown",!1)}\n              </div>\n              <div class="control">\n                <button class="button is-danger is-light button--deleteLotStatus" data-tooltip="Delete Status" type="button" aria-label="Delete Status">\n                  <i class="fas fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n          </td>`,null===(t=n.querySelector("form"))||void 0===t||t.addEventListener("submit",m),n.querySelector(".button--moveLotStatusUp").addEventListener("click",v),n.querySelector(".button--moveLotStatusDown").addEventListener("click",v),null===(s=n.querySelector(".button--deleteLotStatus"))||void 0===s||s.addEventListener("click",y),o.append(n)}}else o.innerHTML=`<tr><td colspan="2">\n          <div class="message is-warning"><p class="message-body">There are no active ${e.escapedAliases.lot} statuses.</p></div>\n          </td></tr>`}delete exports.lotStatuses,document.querySelector("#form--addLotStatus").addEventListener("submit",t=>{t.preventDefault();const s=t.currentTarget;cityssm.postJSON(`${e.urlPrefix}/admin/doAddLotStatus`,s,t=>{var o,r;const n=t;n.success?(p=n.lotStatuses,T(),s.reset(),null===(o=s.querySelector("input"))||void 0===o||o.focus()):bulmaJS.alert({title:`Error Adding ${e.escapedAliases.Lot} Status`,message:null!==(r=n.errorMessage)&&void 0!==r?r:"",contextualColorName:"danger"})})}),T(),Object.defineProperty(exports,"__esModule",{value:!0});let g=exports.lotOccupantTypes;function f(t){t.preventDefault(),cityssm.postJSON(`${e.urlPrefix}/admin/doUpdateLotOccupantType`,t.currentTarget,t=>{var s;const o=t;o.success?(g=o.lotOccupantTypes,bulmaJS.alert({message:`${e.escapedAliases.Lot} ${e.escapedAliases.Occupant} Type Updated Successfully`,contextualColorName:"success"})):bulmaJS.alert({title:`Error Updating ${e.escapedAliases.Lot} ${e.escapedAliases.Occupant} Type`,message:null!==(s=o.errorMessage)&&void 0!==s?s:"",contextualColorName:"danger"})})}function O(t){const s=t.currentTarget.closest("tr"),o=s.dataset.lotOccupantTypeId;bulmaJS.confirm({title:`Delete ${e.escapedAliases.Lot} ${e.escapedAliases.Occupant} Type`,message:`Are you sure you want to delete this ${e.escapedAliases.lot} ${e.escapedAliases.occupant} type?<br />\n                Note that no ${e.escapedAliases.lot} ${e.escapedAliases.occupants} will be removed.`,messageIsHtml:!0,contextualColorName:"warning",okButton:{text:`Yes, Delete ${e.escapedAliases.Lot} ${e.escapedAliases.Occupant} Type`,callbackFunction:function(){cityssm.postJSON(`${e.urlPrefix}/admin/doDeleteLotOccupantType`,{lotOccupantTypeId:o},t=>{var o;const r=t;r.success?(0===(g=r.lotOccupantTypes).length?b():s.remove(),bulmaJS.alert({message:`${e.escapedAliases.Lot} ${e.escapedAliases.Occupant} Type Deleted Successfully`,contextualColorName:"success"})):bulmaJS.alert({title:`Error Deleting ${e.escapedAliases.Lot} ${e.escapedAliases.Occupant} Type`,message:null!==(o=r.errorMessage)&&void 0!==o?o:"",contextualColorName:"danger"})})}}})}function S(t){const s=t.currentTarget,o=s.closest("tr").dataset.lotOccupantTypeId;cityssm.postJSON(`${e.urlPrefix}/admin/${"up"===s.dataset.direction?"doMoveLotOccupantTypeUp":"doMoveLotOccupantTypeDown"}`,{lotOccupantTypeId:o,moveToEnd:t.shiftKey?"1":"0"},t=>{var s;const o=t;o.success?(g=o.lotOccupantTypes,b()):bulmaJS.alert({title:`Error Moving ${e.escapedAliases.Lot} ${e.escapedAliases.Occupant} Type`,message:null!==(s=o.errorMessage)&&void 0!==s?s:"",contextualColorName:"danger"})})}function b(){var s,o;const r=document.querySelector("#container--lotOccupantTypes");if(0!==g.length){r.innerHTML="";for(const n of g){const a=document.createElement("tr");a.dataset.lotOccupantTypeId=n.lotOccupantTypeId.toString();const l=`form--lotOccupantType-${n.lotOccupantTypeId.toString()}`;a.innerHTML=`<td>\n            <div class="field">\n              <div class="control">\n                <input class="input" name="lotOccupantType" type="text"\n                  value="${cityssm.escapeHTML(n.lotOccupantType)}"\n                  form="${l}"\n                  aria-label="${e.escapedAliases.Lot} ${e.escapedAliases.Occupant} Type" maxlength="100" required />\n              </div>\n            </div>\n          </td><td>\n            <div class="field has-addons">\n              <div class="control">\n                <span class="button is-static">fa-</span>\n              </div>\n              <div class="control">\n                <input class="input" name="fontAwesomeIconClass" type="text"\n                  value="${cityssm.escapeHTML(n.fontAwesomeIconClass)}"\n                  form="${l}"\n                  list="datalist--fontAwesomeIconClass" aria-label="Icon Name" maxlength="50" />\n              </div>\n              <div class="control">\n                <span class="button is-static">\n                  <i class="fas fa-fw fa-${cityssm.escapeHTML(n.fontAwesomeIconClass)}"></i>\n                </span>\n              </div>\n            </div>\n          </td><td>\n            <div class="field">\n              <div class="control">\n                <input class="input" name="occupantCommentTitle" type="text"\n                  value="${cityssm.escapeHTML(n.occupantCommentTitle)}"\n                  form="${l}"\n                  aria-label="${e.escapedAliases.Occupant} Comment Title" maxlength="50" />\n              </div>\n            </div>\n          </td><td>\n            <form id="${l}">\n              <input name="lotOccupantTypeId" type="hidden"\n                value="${n.lotOccupantTypeId.toString()}" />\n              <button class="button is-success" type="submit" aria-label="Save">\n                <i class="fas fa-save" aria-hidden="true"></i>\n              </button>\n            </form>\n          </td><td class="is-nowrap">\n            <div class="field is-grouped">\n              <div class="control">\n                ${e.getMoveUpDownButtonFieldHTML("button--moveLotOccupantTypeUp","button--moveLotOccupantTypeDown",!1)}\n              </div>\n              <div class="control">\n                <button class="button is-danger is-light button--deleteLotOccupantType"\n                  data-tooltip="Delete ${e.escapedAliases.Lot} ${e.escapedAliases.Occupant} Type"\n                  type="button"\n                  aria-label="Delete ${e.escapedAliases.Lot} ${e.escapedAliases.Occupant} Type">\n                  <i class="fas fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n          </td>`;const c=a.querySelector("input[name='fontAwesomeIconClass']");c.addEventListener("keyup",t),c.addEventListener("change",t),null===(s=a.querySelector("form"))||void 0===s||s.addEventListener("submit",f),a.querySelector(".button--moveLotOccupantTypeUp").addEventListener("click",S),a.querySelector(".button--moveLotOccupantTypeDown").addEventListener("click",S),null===(o=a.querySelector(".button--deleteLotOccupantType"))||void 0===o||o.addEventListener("click",O),r.append(a)}}else r.innerHTML=`<tr><td colspan="3">\n          <div class="message is-warning">\n          <p class="message-body">There are no active ${e.escapedAliases.lot} ${e.escapedAliases.occupant} types.</p>\n          </div>\n          </td></tr>`}delete exports.lotOccupantTypes,document.querySelector("#form--addLotOccupantType").addEventListener("submit",t=>{t.preventDefault();const s=t.currentTarget;cityssm.postJSON(`${e.urlPrefix}/admin/doAddLotOccupantType`,s,t=>{var o,r;const n=t;n.success?(g=n.lotOccupantTypes,b(),s.reset(),null===(o=s.querySelector("input"))||void 0===o||o.focus()):bulmaJS.alert({title:`Error Adding ${e.escapedAliases.Lot} ${e.escapedAliases.Occupant} Type`,message:null!==(r=n.errorMessage)&&void 0!==r?r:"",contextualColorName:"danger"})})}),b()})();